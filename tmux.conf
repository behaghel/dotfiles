# tmux.conf
#
# the following makes ESC useless with vim CommandT
# set -g default-terminal "screen-256color" # now part of plugin tmux-sensible
# this one makes vim screen plugin start another embedded tmux session instead of using the current one
set -g default-terminal "rxvt-256color"
## This makes pbcopy/pbpaste work in tmux
# set-option -g default-command "reattach-to-user-namespace -l $SHELL -l" # now part of plugin tmux-sensible
## index start from 1
#set -g base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# but incompatible with iTerm integration: disabled for now.
# setw -g aggressive-resize on # now part of plugin tmux-sensible
setw -g status-interval 1
# to make ctrl-arrow, etc. work
setw -g xterm-keys on

# replace C-b by C-g
unbind C-b
set -g prefix C-g
bind C-g last-pane
bind g last-window
bind C-h select-pane -t:.-1
# emacs use C-g to quit current command: make it C-q
bind -n C-q send-keys C-g

bind C-w new-window
bind C-N new-window
bind C-D detach-client
bind C-K confirm-before -p "kill-window #S? (y/n)" kill-window
bind C-R rotate-window -D

# Copy mode : vi
setw -g mode-keys vi
bind -Tcopy-mode-vi 'y' send -X copy-selection
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'C-v' send -X rectangle-toggle
 
#bepo
bind ESCAPE copy-mode
bind c select-pane -L
bind t select-pane -D
bind s select-pane -U
bind r select-pane -R
# Use Alt-vim keys without prefix key to switch panes
bind -n M-c select-pane -L
bind -n M-t select-pane -D
bind -n M-s select-pane -U
bind -n M-r select-pane -R
#copy mode
bind -Tcopy-mode-vi 'c' send -X cursor-left
bind -Tcopy-mode-vi 't' send -X cursor-down
bind -Tcopy-mode-vi 's' send -X cursor-up
bind -Tcopy-mode-vi 'r' send -X cursor-right
bind -Tcopy-mode-vi 'T' send -X scroll-down
bind -Tcopy-mode-vi 'S' send -X scroll-up
bind -Tcopy-mode-vi é send -X next-word
bind -Tcopy-mode-vi É send -X next-word
bind -Tcopy-mode-vi 'T' send -X scroll-down
bind -Tcopy-mode-vi 'S' send -X scroll-up
# move erased bindings elsewhere
bind C-s choose-session

# handle binding
# default vertical binding %, remap:
unbind %
bind | split-window -h
bind _ split-window -v

# sometimes annoying to C-o instead of 'o'
unbind C-o
bind C-i rotate-window

# fullscreen current pane and reverse
unbind +
bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind -
# FIXME
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom
bind -r S-Down resize-pane -D 3
bind -r S-Up resize-pane -U 3
bind -r S-Left resize-pane -L 3
bind -r S-Right resize-pane -R 3

# bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; run-shell "$TERMINAL -e 'cat /tmp/tmux-buffer | urlview'"
#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# FIXME: make it more robust, less machine specific
# when on a remote host via SSH, import my dotfiles and stuff I need
bind H send-keys 'export HOME=/tmp/hubertb; [ -d $HOME/etc ] || mkdir -p $HOME/etc; [ -d $HOME/.dotfiles ] || mkdir -p $HOME/.dotfiles; [ -d $HOME/.vim ] || mkdir -p $HOME/.vim; export RSYNC_RSH="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"; rsync -azv hubertb-1.desktop:.dotfiles/ ~/.dotfiles/; rsync -azv hubertb-1.desktop:.vim/ ~/.vim/; rsync -azv hubertb-1.desktop:etc/ ~/etc/; ~/.dotfiles/install.sh; . ~/.zshrc; fc -R' Enter


#new-session -s main 'zsh'
#split-window -v -p 87 -t 0 'zsh'  #weechat-curses # create #1
#split-window -h -p 50 -t 0 'zsh'  # create #2
#selectp -t main.0:0
#new zsh

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'egel/tmux-gruvbox'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
